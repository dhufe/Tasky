---
name: Build & Release with GoReleaser

on:
  release:
    types: [prereleased]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Delete existing release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # استخراج نام تگ از پرام (مثلاً "v0.7.0")
          tag=${GITHUB_REF#refs/tags/}
          echo "🔍 Finding release ID for tag=$tag"
          # دریافت آی‌دی ریلیز بر اساس تگ
          release_id=$(gh api repos/$GITHUB_REPOSITORY/releases/tags/$tag --jq .id)
          echo "Found release_id=$release_id"

          # دریافت لیست همه Asset IDs مربوط به آن ریلیز
          asset_ids=$(gh api repos/$GITHUB_REPOSITORY/releases/$release_id/assets --jq '.[].id')
          if [ -z "$asset_ids" ]; then
            echo "No existing assets to delete."
          else
            echo "Deleting assets: $asset_ids"
            # حذف تکی‌تکی همهٔ Assetها
            for asset_id in $asset_ids; do
              echo "→ Deleting asset_id=$asset_id"
              gh api repos/$GITHUB_REPOSITORY/releases/assets/$asset_id --method DELETE
            done
          fi

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          distribution: goreleaser
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
